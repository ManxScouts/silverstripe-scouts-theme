// theme specific variables
@import "variables";

// Core variables and mixins
@import "bootstrap/variables";
@import "bootstrap/mixins";

.typography {
  //
  // Typography
  // --------------------------------------------------


  // Headings
  // -------------------------

  h1, h2, h3, h4, h5, h6{
    font-family: $scoutPrimaryFont;
    font-weight: $headings-font-weight;
    line-height: $headings-line-height;
    color: $headings-color;

    small{
      font-weight: normal;
      line-height: 1;
      color: $headings-small-color;
    }
  }

  h1,
  h2,
  h3 {
    margin-top: $line-height-computed;
    margin-bottom: ($line-height-computed / 2);

    small {
      font-size: 65%;
    }
  }
  h4,
  h5,
  h6,{
    margin-top: ($line-height-computed / 2);
    margin-bottom: ($line-height-computed / 2);

    small {
      font-size: 75%;
    }
  }

  h1 { font-size: $font-size-h1; }
  h2 { font-size: $font-size-h2; }
  h3 { font-size: $font-size-h3; }
  h4 { font-size: $font-size-h4; }
  h5 { font-size: $font-size-h5; }
  h6 { font-size: $font-size-h6; }


  // Body text
  // -------------------------

  p {
    margin: 0 0 ($line-height-computed / 2);
  }

  .lead {
    margin-bottom: $line-height-computed;
    font-size: floor(($font-size-base * 1.15));
    font-weight: 200;
    line-height: 1.4;

    @media (min-width: $screen-sm-min) {
      font-size: ($font-size-base * 1.5);
    }
  }


  // Emphasis & misc
  // -------------------------

  // Ex: 14px base font * 85% = about 12px
  small  { font-size: 85%; }

  // Undo browser default styling
  cite    { font-style: normal; }

  // Alignment
  .text-left           { text-align: left; }
  .text-right          { text-align: right; }
  .text-center         { text-align: center; }
  .text-justify        { text-align: justify; }

  // Contextual colors
  .text-muted {
    color: $text-muted;
  }

  @include text-emphasis-variant('.text-primary', $brand-primary);

  @include text-emphasis-variant('.text-success', $state-success-text);

  @include text-emphasis-variant('.text-info', $state-info-text);

  @include text-emphasis-variant('.text-warning', $state-warning-text);

  @include text-emphasis-variant('.text-danger', $state-danger-text);


  // Page header
  // -------------------------

  .page-header {
    padding-bottom: (($line-height-computed / 2) - 1);
    margin: ($line-height-computed * 2) 0 $line-height-computed;
    border-bottom: 1px solid $page-header-border-color;
  }


  // Lists
  // --------------------------------------------------

  // Unordered and Ordered lists
  ul,
  ol {
    margin-top: 0;
    margin-bottom: ($line-height-computed / 2);
    ul,
    ol {
      margin-bottom: 0;
    }
  }

  // List options

  // Unstyled keeps list items block level, just removes default browser padding and list-style
  .list-unstyled {
    padding-left: 0;
    list-style: none;
  }

  // Inline turns list items into inline-block
  .list-inline {
    @extend .list-unstyled;
    margin-left: -5px;

    > li {
      display: inline-block;
      padding-left: 5px;
      padding-right: 5px;
    }
  }

  // Description Lists
  dl {
    margin-top: 0; // Remove browser default
    margin-bottom: $line-height-computed;
  }
  dt,
  dd {
    line-height: $line-height-base;
  }
  dt {
    font-weight: bold;
  }
  dd {
    margin-left: 0; // Undo browser default
  }

  // Horizontal description lists
  //
  // Defaults to being stacked without any of the below styles applied, until the
  // grid breakpoint is reached (default of ~768px).

  @media (min-width: $grid-float-breakpoint) {
    .dl-horizontal {
      dt {
        float: left;
        width: ($component-offset-horizontal - 20);
        clear: left;
        text-align: right;
        @include text-overflow();
      }
      dd {
        margin-left: $component-offset-horizontal;
        @include clearfix(); // Clear the floated `dt` if an empty `dd` is present
      }
    }
  }

  // MISC
  // ----

  // Abbreviations and acronyms
  abbr[title],
    // Add data-* attribute to help out our tooltip plugin, per https://github.com/twbs/bootstrap/issues/5257
  abbr[data-original-title] {
    cursor: help;
    border-bottom: 1px dotted $abbr-border-color;
  }
  .initialism {
    font-size: 90%;
    text-transform: uppercase;
  }

  // Blockquotes
  blockquote {
    padding: ($line-height-computed / 2) $line-height-computed;
    margin: 0 0 $line-height-computed;
    font-size: $blockquote-font-size;
    border-left: 5px solid $blockquote-border-color;

    p,
    ul,
    ol {
      &:last-child {
        margin-bottom: 0;
      }
    }

    // Note: Deprecated small and .small as of v3.1.0
    // Context: https://github.com/twbs/bootstrap/issues/11660
    footer,
    small,
    .small {
      display: block;
      font-size: 80%; // back to default font-size
      line-height: $line-height-base;
      color: $blockquote-small-color;

      &:before {
        content: '\2014 \00A0'; // em dash, nbsp
      }
    }
  }

  // Opposite alignment of blockquote
  //
  // Heads up: `blockquote.pull-right` has been deprecated as of v3.1.0.
  .blockquote-reverse {
    padding-right: 15px;
    padding-left: 0;
    border-right: 5px solid $blockquote-border-color;
    border-left: 0;
    text-align: right;

    // Account for citation
    footer,
    small,
    .small {
      &:before { content: ''; }
      &:after {
        content: '\00A0 \2014'; // nbsp, em dash
      }
    }
  }

  // Quotes
  blockquote:before,
  blockquote:after {
    content: "";
  }

  // Addresses
  address {
    margin-bottom: $line-height-computed;
    font-style: normal;
    line-height: $line-height-base;
  }

  //
  // Code (inline and block)
  // --------------------------------------------------


  // Inline and block code styles
  code,
  kbd,
  pre,
  samp {
    font-family: $font-family-monospace;
  }

  // Inline code
  code {
    padding: 2px 4px;
    font-size: 90%;
    color: $code-color;
    background-color: $code-bg;
    white-space: nowrap;
    border-radius: $border-radius-base;
  }

  // User input typically entered via keyboard
  kbd {
    padding: 2px 4px;
    font-size: 90%;
    color: $kbd-color;
    background-color: $kbd-bg;
    border-radius: $border-radius-small;
    box-shadow: inset 0 -1px 0 rgba(0,0,0,.25);
  }

  // Blocks of code
  pre {
    display: block;
    padding: (($line-height-computed - 1) / 2);
    margin: 0 0 ($line-height-computed / 2);
    font-size: ($font-size-base - 1); // 14px to 13px
    line-height: $line-height-base;
    word-break: break-all;
    word-wrap: break-word;
    color: $pre-color;
    background-color: $pre-bg;
    border: 1px solid $pre-border-color;
    border-radius: $border-radius-base;

    // Account for some code outputs that place code tags in pre tags
    code {
      padding: 0;
      font-size: inherit;
      color: inherit;
      white-space: pre-wrap;
      background-color: transparent;
      border-radius: 0;
    }
  }

  // Enable scrollable blocks of code
  .pre-scrollable {
    max-height: $pre-scrollable-max-height;
    overflow-y: scroll;
  }

  //
  // Tables
  // --------------------------------------------------


  table {
    max-width: 100%;
    background-color: $table-bg;
  }
  th {
    text-align: left;
  }


  // Baseline styles

  table {
    width: 100%;
    margin-bottom: $line-height-computed;
    // Cells
    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th,
        > td {
          padding: $table-cell-padding;
          line-height: $line-height-base;
          vertical-align: top;
          border-top: 1px solid $table-border-color;
        }
      }
    }
    // Bottom align for column headings
    > thead > tr > th {
      vertical-align: bottom;
      border-bottom: 2px solid $table-border-color;
    }
    // Remove top border from thead by default
    > caption + thead,
    > colgroup + thead,
    > thead:first-child {
      > tr:first-child {
        > th,
        > td {
          border-top: 0;
        }
      }
    }
    // Account for multiple tbody instances
    > tbody + tbody {
      border-top: 2px solid $table-border-color;
    }

    // Nesting
    table{
      background-color: $body-bg;
    }
  }


  // Condensed table w/ half padding

  .table-condensed {
    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th,
        > td {
          padding: $table-condensed-cell-padding;
        }
      }
    }
  }


  // Bordered version
  //
  // Add borders all around the table and between all the columns.

  .table-bordered {
    border: 1px solid $table-border-color;
    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th,
        > td {
          border: 1px solid $table-border-color;
        }
      }
    }
    > thead > tr {
      > th,
      > td {
        border-bottom-width: 2px;
      }
    }
  }


  // Zebra-striping
  //
  // Default zebra-stripe styles (alternating gray and transparent backgrounds)

  .table-striped {
    > tbody > tr:nth-child(odd) {
      > td,
      > th {
        background-color: $table-bg-accent;
      }
    }
  }


  // Hover effect
  //
  // Placed here since it has to come after the potential zebra striping

  .table-hover {
    > tbody > tr:hover {
      > td,
      > th {
        background-color: $table-bg-hover;
      }
    }
  }


  // Table cell sizing
  //
  // Reset default table behavior

  table col[class*="col-"] {
    position: static; // Prevent border hiding in Firefox and IE9/10 (see https://github.com/twbs/bootstrap/issues/11623)
    float: none;
    display: table-column;
  }
  table {
    td,
    th {
      &[class*="col-"] {
        position: static; // Prevent border hiding in Firefox and IE9/10 (see https://github.com/twbs/bootstrap/issues/11623)
        float: none;
        display: table-cell;
      }
    }
  }


  // Table backgrounds
  //
  // Exact selectors below required to override `.table-striped` and prevent
  // inheritance to nested tables.

  // Generate the contextual variants
  @include table-row-variant('tr-active', $table-bg-active);
  @include table-row-variant('tr-success', $state-success-bg);
  @include table-row-variant('tr-info', $state-info-bg);
  @include table-row-variant('tr-warning', $state-warning-bg);
  @include table-row-variant('tr-danger', $state-danger-bg);


  // Responsive tables
  //
  // Wrap your tables in `.table-responsive` and we'll make them mobile friendly
  // by enabling horizontal scrolling. Only applies <768px. Everything above that
  // will display normally.

  @media (max-width: $screen-xs-max) {
    .table-responsive {
      width: 100%;
      margin-bottom: ($line-height-computed * 0.75);
      overflow-y: hidden;
      overflow-x: scroll;
      -ms-overflow-style: -ms-autohiding-scrollbar;
      border: 1px solid $table-border-color;
      -webkit-overflow-scrolling: touch;

      // Tighten up spacing
      > table {
        margin-bottom: 0;

        // Ensure the content doesn't wrap
        > thead,
        > tbody,
        > tfoot {
          > tr {
            > th,
            > td {
              white-space: nowrap;
            }
          }
        }
      }

      // Special overrides for the bordered tables
      > .table-bordered {
        border: 0;

        // Nuke the appropriate borders so that the parent can handle them
        > thead,
        > tbody,
        > tfoot {
          > tr {
            > th:first-child,
            > td:first-child {
              border-left: 0;
            }
            > th:last-child,
            > td:last-child {
              border-right: 0;
            }
          }
        }

        // Only nuke the last row's bottom-border in `tbody` and `tfoot` since
        // chances are there will be only one `tr` in a `thead` and that would
        // remove the border altogether.
        > tbody,
        > tfoot {
          > tr:last-child {
            > th,
            > td {
              border-bottom: 0;
            }
          }
        }

      }
    }
  }

  // Responsive images (ensure images don't scale beyond their parents)
  .img-responsive {
    @include img-responsive();
  }

  // Rounded corners
  .img-rounded {
    border-radius: $border-radius-large;
  }

  // Image thumbnails
  //
  // Heads up! This is mixin-ed into thumbnails.less for `.thumbnail`.
  .img-thumbnail {
    padding: $thumbnail-padding;
    line-height: $line-height-base;
    background-color: $thumbnail-bg;
    border: 1px solid $thumbnail-border;
    border-radius: $thumbnail-border-radius;
    @include transition(all .2s ease-in-out);

    // Keep them at most 100% wide
    @include img-responsive(inline-block);
  }

  // Perfect circle
  .img-circle {
    border-radius: 50%; // set radius in percents
  }


}
